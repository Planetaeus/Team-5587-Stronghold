package org.usfirst.frc.team5587.robot.commands;

import org.usfirst.frc.team5587.robot.Robot;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class Trot extends Command {

	private double power, curve, time;
	private int timeElapsed;
	
	/*
	 * @param p The power of the motors
	 * @param c The curve of the motion
	 * @param t The time (in seconds) to drive
	 */
    public Trot( double p, double c, double t ) {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
    	requires( Robot.hooves );
    	power = p;
    	time = t * 50; //Converts the time to
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.hooves.trot( power, curve );
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}