// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5587.MyRobot.commands;

import org.usfirst.frc5587.MyRobot.Robot;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class RelativeLift extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private boolean m_direction;
    private static final double DELTA_SETPOINT = 2.0;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public RelativeLift(boolean direction) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_direction = direction;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.strongArm);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.strongArm.enable();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if( Robot.strongArm.isAtBottom() && !m_direction ) 	//Is at the bottom and the button is telling it to go further down
    		Robot.strongArm.stay();						  	//Stay right where you are
    	else if( Robot.strongArm.isAtTop() && m_direction ) //Is at the top and the button is telling it to go further up
    		Robot.strongArm.reset();						//Reset the encoder, stay right where you are
    	else
    		Robot.strongArm.setSetpointRelative( DELTA_SETPOINT ); //You're in the clear, move as you like
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
